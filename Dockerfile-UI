###########################################################
#           ARM 3.0 Minimal Alpine Docker                #
###########################################################

###########################################################
# Stage 1: Builder (compiles Python dependencies)
###########################################################
FROM python:3.12.1-alpine AS builder

# Set environment variables
ENV ARM_UID=1000
ENV ARM_GID=1000
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1

# Install build dependencies
RUN apk add --no-cache --virtual .build-deps \
        build-base \
        git \
        libffi-dev \
        openssl-dev \
        python3-dev \
        bash \
        wget \
        nano \
        git

# Set working directory
WORKDIR /opt/arm

# Copy Python requirements and install to a separate location
COPY requirements_ui.txt ./requirements.txt
RUN pip install --upgrade pip wheel setuptools psutil pyudev \
    && pip install --prefix=/install --ignore-installed --prefer-binary -r requirements.txt

###########################################################
# Stage 2: Final minimal runtime image
###########################################################
FROM python:3.12.1-alpine

# Minimal runtime dependencies
RUN apk add --no-cache \
        bash \
        nano \
        ca-certificates \
        libffi \
        openssl \
        git \
    && rm -rf /var/cache/apk/*

# Create ARM user and directories
RUN addgroup -g 1000 arm \
    && adduser -D -h /home/arm -s /bin/bash -u 1000 -G arm arm \
    && mkdir -m 0777 -p /home/arm /home/arm/config /opt/arm

WORKDIR /opt/arm

# Copy Python dependencies from builder
COPY --from=builder /install /usr/local

# Copy ARM source code
COPY . /opt/arm/
COPY arm/ui/settings/comments.json /arm/app/comments.json

# Setup git safe directory
RUN git config --global --add safe.directory /opt/arm

# Setup healthcheck
COPY temp_healthcheck.sh /healthcheck.sh
RUN chmod +x /healthcheck.sh
HEALTHCHECK --interval=5m --timeout=15s --start-period=30s CMD /healthcheck.sh

# Default command
CMD ["python3", "/opt/arm/arm/runui.py"]

# Switch to ARM user
USER arm
WORKDIR /home/arm
